
%% FIXATION STABILITY
% Marcello A. Maniglia, 2017-2019/10/28
%this script is part of the OculomotorStrategyToolkit (Maniglia, Visscher 
%and Seitz, 2020)and it analyzes eyetracker data generated by the
%'PRL_test.m' to extract the Fixation stability metric. This is defined 
%as the dispersion of eye positions after a first saccade on a given trial 
%(mean across trials). This metric is computed by first identifying all eye 
%positions after the first fixation of the trial (as defined in the 
%Saccadic re-referencing script). Kernel Density Estimator is fit to these 
%positions, and is weighted for duration (KDE/duration of the trial in 
%frames). The location of each trial?s KDE is then normalized to the 
%estimated across-trial PRL location. This location is defined as the 
%averaged center of the single-trial BCEAs normalized by the position of 
%the first fixation, and centered on the averaged center of the 
%single-trial BCEAs. Additionally, the script produces additional output 
%related to fixation duration, correlation of fixation duration and 
%dispersion etc.

addpath([cd '/Functions']);

subN=baseName(8:17);
name=['Fixation stability' subN ];
subNum=['Sub ' baseName(8:10) ' Sess ' baseName(16:17) ' ' ];

firsttrial=1;
totaltrial=str2num(TrialNum(6:end));

%define the duration of the fixation in seconds (default: .133s)
durationtocallfixation=.133;
%duration of the fixation in frames (ifi = inter frame interval)
framestocallfixation=round(durationtocallfixation/ifi);

postTargetWindowTime=framestocallfixation;
postTargetWindow=round(postTargetWindowTime);
%screen info
Xcenter=wRect(3)/2;
Ycenter=wRect(4)/2;
xlimit=(wRect(3)/2)/pix_deg;
ylimit=(wRect(4)/2)/pix_deg_vert;

fixcounter=[];

sampleX=(-xlimit:1:xlimit);
sampleY=(-ylimit:1:ylimit);
heatmatrix= zeros(length(sampleX), length(sampleY));

%scotoma info
radius = scotomasize(1)/2; %radius of scotoma
[sx,sy]=meshgrid(-wRect(3)/2:wRect(3)/2,-wRect(4)/2:wRect(4)/2);
circlePixels=sx.^2 + sy.^2 <= radius.^2;
d=(circlePixels==1);
newfig=circlePixels;
circlePixels=newfig;

%initialize single trial BCEA calculation
BCEA_data=zeros(totaltrial,1);

correctCounter=zeros(totaltrial,1);
correcCounter=zeros(totaltrial,1);
durationTrial=zeros(totaltrial,1);
postcounter_c_c=0;

%KDE info
npern=512;
Kernel_X_centered=zeros(npern,npern,totaltrial);
Kernel_Y_centered=zeros(npern,npern,totaltrial);
Kernel_density_centered=zeros(npern,npern,totaltrial);
clear theStart

%find the first available eye position after stimulus presentation
firstframetarget=[];
redDot=nan(totaltrial,1);

for i=firsttrial:totaltrial
    TrialNum = strcat('Trial',num2str(i));
    firstfix=0;
    if exist('EyeSummary.(TrialNum).FixationIndices(end,2)')==0
        %fix missing ending frame of last fixation in FixationIndices
        EyeSummary.(TrialNum).FixationIndices(end,2)=length(EyeSummary.(TrialNum).EyeData);
    end;
    
    if sum(EyeSummary.(TrialNum).EyeData(:,5)>=EyeSummary.(TrialNum).TimeStamps.Stimulus)>=1 %if we have eye data after stimulus presentation
        

        FramesAfterTargetPresentation=find(EyeSummary.(TrialNum).EyeData(:,5)>=EyeSummary.(TrialNum).TimeStamps.Stimulus);
        firstframetarget=[firstframetarget FramesAfterTargetPresentation(1) ];
        %target coordinates (with respect to the center)
        Heatmap.(TrialNum).TargetX=EyeSummary.(TrialNum).TargetX*pix_deg;
        Heatmap.(TrialNum).TargetY=EyeSummary.(TrialNum).TargetY*pix_deg;
        tgt_y=Heatmap.(TrialNum).TargetY;
        tgt_x=Heatmap.(TrialNum).TargetX;
        Heatmap.(TrialNum).TargetXRespectToCenter=Xcenter+Heatmap.(TrialNum).TargetX;
        Heatmap.(TrialNum).TargetYRespectToCenter=Ycenter+Heatmap.(TrialNum).TargetY;
        
        % fixations after target presentation
        clear ww
        ww=EyeSummary.(TrialNum).FixationIndices(EyeSummary.(TrialNum).FixationIndices(:,1)>FramesAfterTargetPresentation(1),:)
       
        fcounter{i}=ww;
        clear yw
        
        
        %fixations after enough time from target presentation that last
        %long enough (as much as specified above)
        yw=[];
        yw2=[];
        if isempty(ww)==0
            for jid=1:length(ww(:,1))
                if ww(jid,2)-ww(jid,1)>=framestocallfixation  && ww(jid,1)>FramesAfterTargetPresentation(1)+10
                    yw=[yw ww(jid,1)]
                    yw2=[yw2 ww(jid,2)]
                    % break
                end
            end
        end
        
        firstw=[];
        firstw2=[];
        
                % first fixation in the trial (that took place long enough after
        % target appearance)
        if isempty(ww)==0
            for jiid=1:length(ww(:,1))
                if ww(jiid,2)-ww(jiid,1)>=framestocallfixation && ww(jiid,1)>FramesAfterTargetPresentation(1)+10
                    firstw=ww(jiid,1);
                    firstw2=ww(jiid,2);
                    break
                end
            end
        end
        
        newfixation.(TrialNum).fixStart=[];
        newfixation.(TrialNum).fixStop=[];
        
        % only consider fixations periods of stable eye position for enough
        % time (as defined time-wise above)
        for fiu=1:length(EyeSummary.(TrialNum).FixationIndices(:,1))
            if EyeSummary.(TrialNum).FixationIndices(fiu,2)-EyeSummary.(TrialNum).FixationIndices(fiu,1)>=framestocallfixation
              %initial frame of each valid fixation
                newfixation.(TrialNum).fixStart=[newfixation.(TrialNum).fixStart EyeSummary.(TrialNum).FixationIndices(fiu,1)]
                % final frame of each valid fixation
                newfixation.(TrialNum).fixStop=[newfixation.(TrialNum).fixStop EyeSummary.(TrialNum).FixationIndices(fiu,2) ]
            end
        end
        
        if length(newfixation.(TrialNum).fixStart)>1 %if we have at least one fixation that meets our needs
            
            fix=0;
            cntr=0;
            counterr=0;
            for w=1:length(newfixation.(TrialNum).fixStart)
                totalfixation(i)=w;
                %eye position at the time of fixation
                target_x=EyeSummary.(TrialNum).EyeData(newfixation.(TrialNum).fixStart(w),1)
                target_y=EyeSummary.(TrialNum).EyeData(newfixation.(TrialNum).fixStart(w),2)
                
                %eye position respect to the center and the target location
                diffx=target_x-(wRect(3)/2+tgt_x);
                diffy=target_y-(wRect(4)/2+tgt_y);
                
                if newfixation.(TrialNum).fixStart(w)>(FramesAfterTargetPresentation(1)+postTargetWindow) 
                    counterr=counterr+1;
                    firstfix=1;
                    start=newfixation.(TrialNum).fixStart(w)
                    totalfixation_post(i)=counterr;
                    cntr=length(EyeSummary.(TrialNum).EyeData(start:end,1))
                    %we take all the eye data points after this fixation.
                    %In the analysis we include all the eye positions after
                    %a first fixation which is long enough and happens long
                    %enough after stimulus presentation takes place
                    Heatmap.(TrialNum).OneFixationX(1:cntr)=EyeSummary.(TrialNum).EyeData(start:end,1);
                    Heatmap.(TrialNum).OneFixationY(1:cntr)=EyeSummary.(TrialNum).EyeData(start:end,2);
                    durationTrial(i)=cntr;
                    theStart(i)=start;
                    
                    if round(wRect(3)/2+diffx)<=wRect(3) && round(wRect(4)/2+diffy)<=wRect(4) && round(wRect(3)/2+diffx)> 0 && round(wRect(4)/2+diffy)>0
                        if circlePixels(round(wRect(4)/2+diffy),round(wRect(3)/2+diffx))==0
                            if yw(counterr)==firstw
                                %if first fixation happens outside the
                                %scotoma
                                redDot(i)=1;
                            end
                        end
                    end
                    break
                end
            end
            
            if isfield(Heatmap.(TrialNum),'OneFixationX')
                Heatmap.(TrialNum).OneFixationXClean=Heatmap.(TrialNum).OneFixationX(Heatmap.(TrialNum).OneFixationX~=0)
                Heatmap.(TrialNum).OneFixationYClean=Heatmap.(TrialNum).OneFixationY(Heatmap.(TrialNum).OneFixationY~=0)
                %eye position normalized by the centered target location 
                offsetTarget.(TrialNum).FixationY=(Heatmap.(TrialNum).OneFixationYClean)-Heatmap.(TrialNum).TargetYRespectToCenter
                offsetTarget.(TrialNum).FixationX=(Heatmap.(TrialNum).OneFixationXClean)-Heatmap.(TrialNum).TargetXRespectToCenter
                
                %to account for uneven length of x and y array (sometimes
                %it happens)
                if length(offsetTarget.(TrialNum).FixationY)~=length(offsetTarget.(TrialNum).FixationX)
                    
                    if length(offsetTarget.(TrialNum).FixationY)>length(offsetTarget.(TrialNum).FixationX)
                        offsetTarget.(TrialNum).FixationY=offsetTarget.(TrialNum).FixationY(1:length(offsetTarget.(TrialNum).FixationX))
                    elseif length(offsetTarget.(TrialNum).FixationY)<length(offsetTarget.(TrialNum).FixationX)
                        offsetTarget.(TrialNum).FixationX=offsetTarget.(TrialNum).FixationX(1:length(offsetTarget.(TrialNum).FixationY))
                        
                    end
                end
                
                coordinates.(TrialNum).trgt=[offsetTarget.(TrialNum).FixationX'  offsetTarget.(TrialNum).FixationY']
                coordinates.(TrialNum).FixAbs=[(Heatmap.(TrialNum).OneFixationX)' (Heatmap.(TrialNum).OneFixationY)']
                coordinates.(TrialNum).RelativeToCenter=coordinates.(TrialNum).trgt;
                
                for ww=1:length(coordinates.(TrialNum).RelativeToCenter(:,1))

                    degX=(coordinates.(TrialNum).RelativeToCenter(ww,1)/pix_deg);
                    degY=(coordinates.(TrialNum).RelativeToCenter(ww,2)/pix_deg_vert);
                    
                    for sss=2:length(sampleX)
                        for dd=2:length(sampleY)
                            if degX<=sampleX(sss) && degX>=sampleX(sss-1) && degY<=sampleY(dd) && degY>=sampleY(dd-1)
                                heatmatrix(sss-1,dd-1)=heatmatrix(sss-1,dd-1)+1;
                            end
                        end
                        
                    end
                    fixcount=coordinates.(TrialNum).RelativeToCenter(ww,:);
                    BCEA_data(i)=fixcount(1,1);
                    fixcounter=[fixcounter;fixcount];
                    clear fixcount
                end
                numFixation.(TrialNum).Fix=fix;
            end
        end
    elseif sum(EyeSummary.(TrialNum).EyeData(:,5)>=EyeSummary.(TrialNum).TimeStamps.Stimulus)==0
        numFixation.(TrialNum).Fix=0;
    end
    
    if BCEA_data(i)~=0 %extract info only for trials with enough data to calculate the BCEA
        if length(coordinates.(TrialNum).RelativeToCenter(:,1))>=5
            lax= coordinates.(TrialNum).RelativeToCenter(:,1)/pix_deg;
            lay= coordinates.(TrialNum).RelativeToCenter(:,2)/pix_deg_vert;
            
            %averaged center
            centerzX(i)=mean(lax);
            centerzY(i)=mean(lay);          
            
            %center to the first fixation 
            lax_centered_c=lax-centerzX(i);
            lay_centered_c=lay-centerzY(i);
            
            elllisin_centered_c(:,:,i)=cov(lax_centered_c,lay_centered_c);
            datasing_centered_c=[lax_centered_c lay_centered_c ];
            [eigenvec_centered_c, eigenval_centered_c ] = eig(elllisin_centered_c(:,:,i));
            d_c_c=sqrt(eigenval_centered_c)
            
            areaEll_centered_c=pi*d_c_c(1)*d_c_c(4);
            
            areaEllarcmin_centered_c=3600*areaEll_centered_c;
            singletrialBCEA_centered_c(i)=round(areaEllarcmin_centered_c);         
            
            dens_centered_c=std(datasing_centered_c)/length(datasing_centered_c)^(1/10);
          
            MAX_c_c=max(datasing_centered_c,[],1); 
            MIN_c_c=min(datasing_centered_c,[],1);
            Range_centered_c=MAX_c_c-MIN_c_c;
            MAX_XY_c_c=MAX_c_c+Range_centered_c; 
            MIN_XY_c_c=MIN_c_c-Range_centered_c;
            % you can choose different ranges, es
            %   MAX_XY_c_c=MAX+Range/4; MIN_XY=MIN-Range/4;
            %     MIN_XY_c_c=MAX+Range/2; MIN_XY=MIN-Range/2;
            
            try
                correcCounter(i)=1
                [bandwidth_c_c,densitysi_c_c,Xsi_c_c,Ysi_c_c]=kde2d_mm(datasing_centered_c,npern,MAX_XY_c_c,MIN_XY_c_c,dens_centered_c);
                
                Kernel_X_centered(:,:,i)=Xsi_c_c;
                Kernel_Y_centered(:,:,i)=Ysi_c_c;
                Kernel_density_centered(:,:,i)=densitysi_c_c;
                postcounter_c_c=postcounter_c_c+1;
                
            catch
            end
            
            
        end
        
    end
end


BCEA_analysis=nan(totaltrial,1);
for i=firsttrial:totaltrial
    TrialNum = strcat('Trial',num2str(i));
    if BCEA_data(i)~=0
        BCEA_analysis(i,1)=mean(coordinates.(TrialNum).RelativeToCenter(:,1));
        BCEA_analysis(i,2)=mean(coordinates.(TrialNum).RelativeToCenter(:,2));
    end
    
end


BCEA_area_arcmin=nan(totaltrial,1);
average_X=nan(totaltrial,1);
average_Y=nan(totaltrial,1);
frameNum=nan(totaltrial,1);
%frameNumY=nan(totaltrial,1);

for i=firsttrial:totaltrial
    TrialNum = strcat('Trial',num2str(i));
    lax=[];
    lay=[];
    if BCEA_data(i)~=0
        lax= coordinates.(TrialNum).RelativeToCenter(:,1)/pix_deg;
        lay= coordinates.(TrialNum).RelativeToCenter(:,2)/pix_deg_vert;
        frameNum(i)=length(lax);
     %   frameNumY(i)=length(lay);
        if length(lax)>2
            ellli=cov(lax,lay);
            data=[lax lay];            
            [eigenvec, eigenval ] = eig(ellli);
            d=sqrt(eigenval);
            areaEll=pi*d(1)*d(4);
            areaEllarcmin=3600*areaEll;
            BCEA_area_arcmin(i)=areaEllarcmin;
            average_X(i)=mean(lax);
            average_Y(i)=mean(lay);
            
        end
    end
end

BCEA_area_arcmin_total=BCEA_area_arcmin;
meanBCEA=nanmean(BCEA_area_arcmin);
std_devBCEA=nanstd(BCEA_area_arcmin);
%outlier cutoff to clean up the dataset
cutoffBCEA=meanBCEA+(2*std_devBCEA);


for uie=1:totaltrial
    if BCEA_area_arcmin_total(uie)> cutoffBCEA
        adjustBCEA(uie)=1;
    else
        adjustBCEA(uie)=0;
    end
end

%consider only trials for which we could calculate a BCEA
BCEA_area_arcmin=BCEA_area_arcmin_total(~isnan(BCEA_area_arcmin_total));
%outlier removed
BCEA_area_arcmin_adj=BCEA_area_arcmin_total(adjustBCEA==0);
BCEA_area_arcmin_adj=BCEA_area_arcmin_adj(~isnan(BCEA_area_arcmin_adj));

figure
subplot(1,2,1)
hist(BCEA_area_arcmin);
xlabel('BCEA area (arcmin2)', 'fontsize', 16);
ylabel('# of trials', 'fontsize', 26);
set(gca,'FontSize',25)

subplot(1,2,2)
hist(BCEA_area_arcmin_adj);
xlabel('BCEA area (arcmin2) - adj', 'fontsize', 16);
ylabel('# of trials', 'fontsize', 26);
set(gca,'FontSize',25)
suptitle( ['Sub ' baseName(8:17) 'single trial BCEA adj' ]);

figure
hist(BCEA_area_arcmin_adj);
xlabel('BCEA area (arcmin2) - adj', 'fontsize', 16);
ylabel('# of trials', 'fontsize', 26);
set(gca,'FontSize',26)
title( ['Sub ' baseName(8:17) ' single trial BCEA' ]);
xlabel('BCEA area (arcmin2) - adj', 'fontsize', 16);

figure
hist(BCEA_area_arcmin_adj)
xlabel('BCEA area (arcmin2) - adj', 'fontsize', 16);
ylabel('# of trials', 'fontsize', 26);
set(gca,'FontSize',26)
title( ['Sub ' baseName(8:17) ' single trial BCEA' ]);
xlabel('arcmin', 'fontsize', 28);
xlim([0 40000]);


%remove BCEA with 0 value
BCEA_area_arcmin_nozero=BCEA_area_arcmin(BCEA_area_arcmin~=0);

%remove x for which the BCEA was beyond the outlier cutoff
frameNum_adj=frameNum(adjustBCEA==0);
%remove x with NAN values
frameNum_clean=frameNum(~isnan(frameNum));
frameNum_clean=(frameNum_clean(frameNum_clean~=2 & frameNum_clean~=0 & frameNum_clean~=1))

BCEA_analysis_nozero=BCEA_analysis(~isnan(BCEA_analysis(:,1)),:)

BCEA_analysis_nozero=BCEA_analysis(~isnan(BCEA_analysis(:,1)),:);
if length(BCEA_analysis_nozero(:,1))>1
    BCEA_analysis_average=mean(BCEA_analysis_nozero);
else
    BCEA_analysis_average=BCEA_analysis_nozero;
end

%remove BCEA with zero value
BCEA_area_arcmin_nozero_adj=BCEA_area_arcmin_adj(BCEA_area_arcmin_adj~=0);
%eyeposnXnozero_adj=frameNum_adj(frameNum_adj~=0);
frameNum_clean_adj=frameNum_adj(~isnan(frameNum_adj));
frameNum_clean_adj=(frameNum_clean_adj(frameNum_clean_adj~=2 & frameNum_clean_adj~=0 & frameNum_clean_adj~=1));


% histograms of fixation duration with and without outlier removed
figure
subplot(1,2,1)

BCEA_area_deg=(BCEA_area_arcmin_nozero./3600);
BCEA_area_deg_full=(BCEA_area_arcmin_total./3600);


hist(BCEA_area_deg)

xlabel('BCEA (deg^2)', 'fontsize', 26);
ylabel('# of trials', 'fontsize', 26);
title('BCEA')
set(gca,'FontSize',16)

xlim([0 60]);
ylim([0 60]);

subplot(1,2,2)

BCEA_area_deg_adj=(BCEA_area_arcmin_nozero_adj./3600);

hist(BCEA_area_deg_adj);

xlabel('BCEA (deg^2) - adj', 'fontsize', 16);
ylabel('# of trials', 'fontsize', 20);
title('BCEA sans outlier')

set(gca,'FontSize',16)
xlim([0 60]);
ylim([0 60]);

suptitle( ['Sub ' baseName(8:17) ' single trial BCEA adj' ]);


print(['Fix stab' name '_histBCEA_fix_deg_adj'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI



% boxplot of the size of the single-trial BCEAs
figure
set(gca,'FontSize',28)
G={'BCEA'};
boxplot(BCEA_area_deg_adj, G);
thenums=num2str(mean(BCEA_area_deg_adj));
text(1,max(BCEA_area_deg_adj)*0.8,['area: ' thenums(1:end-2) ' deg^2'], 'FontSize', 22)
set(gca,'FontSize',28)
ylabel('BCEA (deg^2)', 'fontsize', 28);

print([ 'Fix stab' name '_boxplotbces_fix'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI



% plot of the location of the centers of the single-trial BCEAs

figure
poss2 = [-(wRect(3)/2)/pix_deg -(wRect(4)/2)/pix_deg_vert ((wRect(3)/2)*2)/pix_deg ((wRect(4)/2)*2)/pix_deg_vert];
rectangle('Position',poss2,'EdgeColor',[1 1 1],'FaceColor',[1 1 1])
hold on
poss2=poss2*1.2
poss = [-scotomadeg/2 -scotomadeg/2 scotomadeg scotomadeg];
rectangle('Position',poss,'Curvature',[1 1],'EdgeColor',[.8 .8 .8],'FaceColor',[.8 .8 .8])
hold on
line([-15,15],[0,0],'LineWidth',1,'Color',[.1 .1 .1])
hold on
line([0,0], [-15,15],'LineWidth',1,'Color',[.1 .1 .1])
hold on
viscircles([0 0], 20/2,'EdgeColor',[.1 .1 .1],'DrawBackgroundCircle',false, 'LineWidth', 1);
viscircles([0 0], 30/2,'EdgeColor',[.1 .1 .1],'DrawBackgroundCircle',false, 'LineWidth', 1);
text(0,-11.5, '10^{\circ} ', 'FontSize', 20)
text(0,-6.5, '5^{\circ} ', 'FontSize', 20)
text(0,-16.5, '15^{\circ} ', 'FontSize', 20)

average_X_nozero=average_X(~isnan(average_X));
average_Y_nozero=average_Y(~isnan(average_Y));

scatter(average_X_nozero,average_Y_nozero, 10, [0 0 1],'filled');
averageCenterOfSingleTrialBCEAx=mean(average_X_nozero);
averageCenterOfSingleTrialBCEAy=mean(average_Y_nozero);


xlim([(-(wRect(3)/2)/pix_deg)*1.2 ((wRect(3)/2)/pix_deg)*1.2 ]);
ylim([(-(wRect(4)/2)/pix_deg_vert)*1.2 ((wRect(4)/2)/pix_deg_vert)*1.2]);

set (gca,'YDir','reverse')

hold on
pbaspect([1.5 1 1]);
set(gca,'FontSize',26)

thetitle=[name(1:end-7) ' single-trial BCEA center']
title(thetitle,'fontsize', 20);

ylabel('degrees of visual angle', 'fontsize', 28);
xlabel('degrees of visual angle', 'fontsize', 28);


print(['Fix stab' name '_plotBCEAcentr'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI




% figure showing correlation of fixation duration X fixation BCEA with
% first fixation outside the scotoma in green and first fixation within the
% scotoma in red
figure

frameNumms=frameNum*13;
eyeposnXs=frameNumms./1000;

frameNum_cleanms=frameNum_clean*13;
BCEA_area_deg_nozero=BCEA_area_deg;
frameNum_cleans=frameNum_cleanms./1000;


srBCEA_area_deg_nozero=sqrt(BCEA_area_deg_nozero);
srBCEA_area_deg=sqrt(BCEA_area_deg_full);

lgBCEA_area_deg_nozero=log10(BCEA_area_deg_nozero);
lgBCEA_area_deg=log10(BCEA_area_deg_full);


logframeNum_cleanms=log10(frameNum_cleanms);
logframeNumms=log10(frameNumms);

scatter(logframeNum_cleanms, lgBCEA_area_deg_nozero,[], [1 0 0], 'filled')
coefs = polyfit(logframeNum_cleanms, lgBCEA_area_deg_nozero, 1);

coefsa=num2str(coefs(1));
coefsb=num2str(coefs(2));

coeffic= ['Y= ' coefsa(1:4)  'x + ' coefsb(1:4) ];
hold on;
text(max(logframeNum_cleanms)*.8, max(lgBCEA_area_deg_nozero)*5/3, coeffic)

set(gca,'FontSize',22)
% green dots = first fixation outside the scotoma
scatter(logframeNumms(redDot==1), lgBCEA_area_deg(redDot==1),[], [0 1 0],'filled' )



ylim([-7 7]);
xlim([2 4.5]);
xlabel('fixation duration (log(ms))', 'fontsize', 26);
ylabel('{\surd}BCEA', 'fontsize', 26);

title('BCEA X Fixation Duration')
print(['Fix stab' name 'BCEA_fit'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI



% figure showing correlation of fixation duration X fixation BCEA 
figure

frameNum_clean_adjs=(frameNum_clean_adj*13)/1000;

BCEA_area_deg_nozero_adj=BCEA_area_deg_adj;
scatter(frameNum_clean_adjs, BCEA_area_deg_nozero_adj, 'filled')
coefs = polyfit(frameNum_clean_adjs, BCEA_area_deg_nozero_adj, 1)
coefsa=num2str(coefs(1))
coefsb=num2str(coefs(2))

if length(coefs)>4
    coeffic= ['Y= ' coefsa(1:4)  'x + ' coefsb(1:4) ];
else
    coeffic= ['Y= ' coefsa  'x + ' coefsb ];
    
end
hold on
text(max(frameNum_clean_adjs)/3, max(BCEA_area_deg_nozero_adj)*2/3, coeffic)


xlabel('fixation duration (sec)', 'fontsize', 26);
ylabel('BCEA (deg^2)', 'fontsize', 26);
title('BCEA sans outlier')


xlim([0 max(frameNum_clean_adjs)*1.1]);
ylim([0 max(BCEA_area_deg_nozero_adj)*1.1]);

hold on; lsline
print(['Fix stab' name 'BCEA_scatter_adj'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI



%histogram of fixation dispersion normalized by fixation duration
figure
subplot(1,2,1)

for tii=1:length(BCEA_area_deg)
    BCEA_area_deg_norm(tii)=BCEA_area_deg(tii)/frameNum_cleans(tii);
    
end

hist(BCEA_area_deg_norm)
set(gca,'FontSize',14)


xlabel('BCEA (deg^2)/duration(s)', 'fontsize', 18);
ylabel('# of trials', 'fontsize', 26);
title('BCEA')

xlim([0 60]);
ylim([0 60]);


subplot(1,2,2)



for tii=1:length(BCEA_area_deg_nozero_adj)
    BCEA_area_deg_adj_norm(tii)=BCEA_area_deg_nozero_adj(tii)/frameNum_clean_adjs(tii);
    
end


hist(BCEA_area_deg_adj_norm);

xlabel('BCEA (deg^2)/duration(s) - adj', 'fontsize', 18);
ylabel('# of trials', 'fontsize', 26);
title('BCEA sans outlier');

set(gca,'FontSize',14);

xlim([0 60]);
ylim([0 60]);

suptitle( ['Sub ' baseName(8:17) 'single-trial BCEA normalized' ]);

print(['Fix stab' name '_histBCEA_fix_deg_normlz'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI


hist(log10(BCEA_area_deg_norm))

ylabel('# of trials', 'fontsize', 22);
xlabel('BCEA (deg^2)/duration(s)', 'fontsize', 18);
set(gca,'FontSize',20)

title('BCEA')

xlim([-3 3]);
ylim([0 35]);


print(['Fix stab' name '_histBCEA_fix_log_normlz'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI




durationTrialSec=durationTrial*ifi;
%remove time = 0
durationTrial_nozero=(durationTrialSec(durationTrial~=0));
averageduration=mean(durationTrial_nozero);

cutoff_time=2*std(durationTrial_nozero);
cutoff_time2=-2*std(durationTrial_nozero);



for icu=firsttrial:totaltrial
    if durationTrialSec(icu)>cutoff_time2 && durationTrialSec(icu)<cutoff_time
        newduration_no_outl(icu)=durationTrialSec(icu);
    end
end


newduration_nozero_nooutl=(newduration_no_outl(newduration_no_outl~=0));

averagedurationOut=mean(newduration_nozero_nooutl);

ratioTime=durationTrialSec/averageduration;

ratioTimeOut=newduration_no_outl/averagedurationOut;

for fif=firsttrial:length(ratioTimeOut)
    ratioTimeOut(fif)=ratioTimeOut(fif)*fif;
end


%weighted, center to the single trial BCEA
XAverage_c_c_w_a=zeros(npern,npern);
YAverage_c_c_w_a=zeros(npern,npern);
densityAverage_c_c_w_a=zeros(npern,npern);
countingo_c_c_w_a=0;
for shis=firsttrial:totaltrial
    if correcCounter(shis)==1
        countingo_c_c_w_a=countingo_c_c_w_a+1;
        XAverage_c_c_w_a=[XAverage_c_c_w_a+Kernel_X_centered(:,:,shis)];
        YAverage_c_c_w_a=[YAverage_c_c_w_a+Kernel_Y_centered(:,:,shis)];
        densityAverage_c_c_w_a=[densityAverage_c_c_w_a+(Kernel_density_centered(:,:,shis)/durationTrial(shis))];
    end
end
XAverage_c_c_w_a=XAverage_c_c_w_a/countingo_c_c_w_a;
YAverage_c_c_w_a=YAverage_c_c_w_a/countingo_c_c_w_a;
densityAverage_c_c_w_a=densityAverage_c_c_w_a/countingo_c_c_w_a;


figure
poss2 = [-(wRect(3)/2)/pix_deg -(wRect(4)/2)/pix_deg_vert ((wRect(3)/2)*2)/pix_deg ((wRect(4)/2)*2)/pix_deg_vert];
rectangle('Position',poss2,'EdgeColor',[1 1 1],'FaceColor',[1 1 1])
hold on
poss = [-scotomadeg/2 -scotomadeg/2 scotomadeg scotomadeg];
rectangle('Position',poss,'Curvature',[1 1],'EdgeColor',[.8 .8 .8],'FaceColor',[.8 .8 .8])
hold on
line([-15,15],[0,0],'LineWidth',1,'Color',[.1 .1 .1])
hold on
line([0,0], [-15,15],'LineWidth',1,'Color',[.1 .1 .1])
hold on
viscircles([0 0], 20/2,'EdgeColor',[.1 .1 .1],'DrawBackgroundCircle',false, 'LineWidth', 1);
viscircles([0 0], 30/2,'EdgeColor',[.1 .1 .1],'DrawBackgroundCircle',false, 'LineWidth', 1);
text(0,-11.5, '10^{\circ} ', 'FontSize', 20)
text(0.5,-6.5, '5^{\circ} ', 'FontSize', 20)
text(0,-16.5, '15^{\circ} ', 'FontSize', 20)

%centered to the average center of each trial's BCEA
XAverage_c_c_w_a=XAverage_c_c_w_a+averageCenterOfSingleTrialBCEAx;
YAverage_c_c_w_a=YAverage_c_c_w_a+averageCenterOfSingleTrialBCEAy;
hold on
contour3(XAverage_c_c_w_a,YAverage_c_c_w_a,densityAverage_c_c_w_a,50), hold on
view(2)
pbaspect([1.5 1 1]);
set(gca, 'FontName', 'Arial');
set (gca,'YDir','reverse');

set(gca,'FontSize',26);
name2=[name ' adjust'];


name2=[baseName(8:17) ' KDE_stability_ccent_align_weight']
title(name2);
hold on
ylabel('degrees of visual angle', 'fontsize', 28);
xlabel('degrees of visual angle', 'fontsize', 28);

xlim([(-(wRect(3)/2)/pix_deg)*1.2 ((wRect(3)/2)/pix_deg)*1.2 ]);
ylim([(-(wRect(4)/2)/pix_deg_vert)*1.2 ((wRect(4)/2)/pix_deg_vert)*1.2]);


print(['Fix stab' baseName(8:17) 'KDE_nocaption'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI

hold on

meanBCEA_deg=meanBCEA/3600;
txt10=num2str(meanBCEA_deg);


if meanBCEA_deg>10
    txt10=txt10(1:5);
else
    txt10=txt10(1:4);
end


text(11,11, ['BCEA= ' txt10, ' deg^{' num2str(2) '}'], 'FontSize', 20)


print(['Fix stab' baseName(8:17) 'KDE_with_BCEA'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI
